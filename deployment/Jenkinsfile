def label = "sumapp-${UUID.randomUUID().toString()}"
podTemplate(label: label, 
	containers: [
	  containerTemplate(name: 'maven', image: 'maven:3.3.9-jdk-8-alpine', ttyEnabled: true, command: 'cat'),
	  containerTemplate(name: 'docker', image: 'docker:stable', ttyEnabled: true, command: 'cat'),
	  containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.8.0', command: 'cat', ttyEnabled: true)
	],
	volumes: [hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock')]
	) {
	
	node(label) {
		
          def 
		
	  
	  stage('Get Source') {
		git "https://github.com/IBM-ICP-CoC/SumApp.git"
	  }

	  stage('Build Maven project') {
		container('maven') {
			sh "mvn -B clean package"
		}
	  }
	  stage('Build Docker image') {
		container('docker') {
		  docker.withRegistry("https://${dockerRegistry}", 'icp-id') {
			sh "docker build -t "https://${dockerRegistry}/${namespace}/${image}:${tag} ."
			sh "docker push "https://${dockerRegistry}/${namespace}/${image}:${tag}"
			sh "docker tag "https://${dockerRegistry}/${namespace}/${image}:${tag} ${image}:latest"
			sh "docker push "https://${dockerRegistry}/${namespace}/${image}:latest"
		  }
		}
	  }
	  stage( 'Clean Up Existing Deployments' ) {
		container('kubectl') {
		  sh "kubectl delete deployments -n ${namespace} --selector=app=${selector}"
		}
	  }
	  stage( 'Deploy to Cluster' ) {
		container('kubectl') {
                  sh "tmp='${dockerRegistry}\\/${namespace}\\/${image}:latest'"
		  sh "echo $tmp"
		  sh "sed -i -e s/{{IMAGE}}/'$tmp'/g ${deployment} "
		  sh "cat \"${deployment}\""
		  sh "kubectl apply -n ${namespace} -f ${deployment}"
		  sh "sleep 5"
		  sh "kubectl apply -n ${namespace} -f ${service}"
		}
	  }
	}
  }
